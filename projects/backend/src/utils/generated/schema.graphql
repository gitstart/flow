### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
An item that is used to create tasks from.\nIt can be a calendar event, a task from tools like Trello or Linear, etc.
"""
type ExternalItem {
  durationInMinutes: Int
  iconUrl: String
  id: ID!
  isRelevant: Boolean!
  scheduledAt: DateTime
  source: String!
  title: String!
  url: String
}

input ExternalItemWhereInput {
  isRelevant: Boolean
  isScheduled: Boolean
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Query {
  externalItems(where: ExternalItemWhereInput): [ExternalItem!]!
  repeatingTasks(where: TaskTemplateWhereInput): [TaskTemplate!]!
}

type Task {
  createdAt: DateTime!

  """
  The date the task is scheduled for\nOnly the day is relevant, the time should be ignored.
  """
  date: DateTime!

  """
  The length of time the task is expected to take.\nIf this task has an external item, use the externalItem.durationInMinutest instead.
  """
  durationInMinutes: Int
  externalItem: ExternalItem
  id: Int!

  """
  The dates of the tasks that were posponed to create this task.\nThis is mostly for analytics purposes, hence why it's not a relation.
  """
  previousTaskDates: [DateTime!]!
  repeats: Boolean
  status: TaskStatus!
  taskTemplate: TaskTemplate
  title: String!
}

enum TaskRepeatance {
  EVERYDAY
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
  WEEKDAY
  WEEKEND
}

enum TaskStatus {
  CANCELED
  DONE
  POSTPONED
  TODO
}

"""Templates for repeating tasks."""
type TaskTemplate {
  """The intial durationInMinutes when creating a task using the template."""
  durationInMinutes: Int
  id: Int!
  repeats: [TaskRepeatance!]!
  title: String!
}

input TaskTemplateWhereInput {
  repeats: [TaskRepeatance!]
}