{
  "name": "@flowdev/server",
  "description": "This is the server of Flow",
  "private": true,
  "scripts": {
    "deps": "echo 'Getting minimum dependencies to build @flowdev/server only' && npm ci --worksapce=@flowdev/server",
    "print-schema": "NODE_ENV=development ts-node --transpile-only src/graphql/index.ts",
    "dev": "NODE_ENV=development ts-node-dev --transpile-only --ignore-watch=plugins --exit-child --respawn --no-notify src/index.ts",
    "build": "tsc --build tsconfig.prod.json",
    "get-web": "cp -r ../web/dist ./dist/web",
    "start": "npm run build -W && npm run get-web && cd dist && node index.js",
    "test": "vitest --config .vitest/config.ts",
    "gen": "prisma generate",
    "db:dev": "prisma migrate dev",
    "db:migrate": "prisma migrate dev --create-only",
    "db:reset": "prisma migrate reset",
    "db:seed": "ts-node -T prisma/seed.ts",
    "setup:db": "psql -c \"CREATE DATABASE flow;\" || echo \"Ignore the above error. Everything is good to go!\"",
    "setup:db:test": "psql -c \"CREATE DATABASE flow_test;\" || echo \"Ignore the above error. Everything is good to go!\"",
    "env:example": "cp -n .env.example .env || true",
    "env:codespaces": "cp .env.codespaces .env"
  },
  "prisma": {
    "seed": "ts-node -T prisma/seed.ts"
  },
  "devDependencies": {
    "@types/chance": "^1.1.3",
    "@types/express": "^4.17.13",
    "@types/node": "^18.7.16",
    "@types/supertest": "^2.0.12",
    "camel-case": "^4.1.2",
    "chance": "^1.1.8",
    "patch-package": "^7.0.0",
    "prisma": "^4.9.0",
    "supertest": "^6.2.4",
    "ts-node-dev": "^2.0.0",
    "typescript": "^4.8.3",
    "vite-plugin-checker": "^0.5.1",
    "vitest": "^0.23.4"
  },
  "dependencies": {
    "@pothos/core": "^3.30.0",
    "@pothos/plugin-prisma": "^3.51.0",
    "@pothos/plugin-relay": "^3.27.0",
    "@pothos/plugin-with-input": "^3.8.0",
    "@prisma/client": "^4.9.0",
    "dayjs": "^1.11.7",
    "express": "^4.18.1",
    "graphql": "^16.6.0",
    "graphql-scalars": "^1.18.0",
    "graphql-yoga": "^3.3.0"
  }
}
